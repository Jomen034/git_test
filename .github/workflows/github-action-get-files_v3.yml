name: "Cross project models checker"

on:
  pull_request:
    branches:
      - main

jobs:
  compare_files:
    runs-on: ubuntu-latest
    name: Run checking process for cross project models
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: Get GitHub username
        id: get-username
        run: echo "username=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV

      - name: Print changed files for debugging
        run: echo "${{ steps.changed-files.outputs.all_changed_files }}"
        
      - name: Compare with static list
        run: |
          STATIC_LIST="cross_project/list_of_cross_model_v3.csv"
          STATIC_MODELS=$(tail -n +2 $STATIC_LIST | cut -d',' -f1)
          STATIC_REFERENCES=$(tail -n +2 $STATIC_LIST | cut -d',' -f2)
          STATIC_ORIGIN_REPOS=$(tail -n +2 $STATIC_LIST | cut -d',' -f3)

          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          CHANGED_MODELS=$(echo "$CHANGED_FILES" | tr ' ' '\n' | awk -F/ '{print $NF}' | awk -F. '{print $1}' | sort | uniq)

          # Find matches between static models and changed models
          MATCHES=$(echo "$CHANGED_MODELS" | grep -F -x -f <(echo "$STATIC_MODELS") || true)

          if [ -n "$MATCHES" ]; then
            echo "Found matches: $MATCHES"

            PR_LINK="${{ github.event.pull_request.html_url }}"
            GITHUB_USERNAME="${{ env.username }}"
            MESSAGE="Hi <users/all>\n**@${GITHUB_USERNAME}** has made changes to models that are used in cross project have been changed in this PR: $PR_LINK.\nThe models are mentioned below, please check it:\n"

            while IFS=',' read -r model reference origin_repo; do
              for changed_model in $CHANGED_MODELS; do
                if [ "$model" = "$changed_model" ]; then
                  echo "Adding to message: $model referred in $reference (origin repo: $origin_repo)"
                  MESSAGE+="* \`$model\` that referred in \`$reference\` (origin repo is \`$origin_repo\`)\n"
                fi
              done
            done < <(tail -n +2 $STATIC_LIST)

            echo "Final message: $MESSAGE"

            if [ -n "$MESSAGE" ]; then
              curl -X POST -H 'Content-Type: application/json' \
                -d '{"text": "'"$MESSAGE"'"}' \
                "${{ secrets.MODELS_CROSS_PROJECT }}"
            else
              echo "No matches found."
            fi

          else
            echo "No matches found."
          fi
